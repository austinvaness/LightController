// <auto-generated>
//   This file was generated by a tool; you should avoid making direct changes.
//   Consider using 'partial classes' to extend these types
//   Input: digitalAudio.proto
// </auto-generated>

#region Designer generated code

namespace rv.data
{

    [global::ProtoBuf.ProtoContract()]
    public partial class DigitalAudio : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoContract()]
        public partial class Setup : global::ProtoBuf.IExtensible
        {
            private global::ProtoBuf.IExtension __pbn__extensionData;
            global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
                => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

            [global::ProtoBuf.ProtoMember(1, Name = @"buses")]
            public global::System.Collections.Generic.List<DigitalAudio.Bus> Buses { get; } = new global::System.Collections.Generic.List<DigitalAudio.Bus>();

            [global::ProtoBuf.ProtoMember(2, Name = @"monitor_device")]
            public DigitalAudio.Device MonitorDevice { get; set; }

            [global::ProtoBuf.ProtoMember(3, Name = @"main_output_device")]
            public DigitalAudio.Device MainOutputDevice { get; set; }

            [global::ProtoBuf.ProtoMember(4, Name = @"enable_sdi_ndi_device")]
            public bool EnableSdiNdiDevice { get; set; }

            [global::ProtoBuf.ProtoMember(5, Name = @"sdi_ndi_device")]
            public DigitalAudio.Device SdiNdiDevice { get; set; }

            [global::ProtoBuf.ProtoMember(6, Name = @"monitor_on_mains")]
            public bool MonitorOnMains { get; set; }

            [global::ProtoBuf.ProtoMember(7, Name = @"disable_main_output_device")]
            public bool DisableMainOutputDevice { get; set; }

        }

        [global::ProtoBuf.ProtoContract()]
        public partial class Bus : global::ProtoBuf.IExtensible
        {
            private global::ProtoBuf.IExtension __pbn__extensionData;
            global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
                => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

            [global::ProtoBuf.ProtoMember(1, Name = @"name")]
            [global::System.ComponentModel.DefaultValue("")]
            public string Name { get; set; } = "";

            [global::ProtoBuf.ProtoMember(2, Name = @"muted")]
            public bool Muted { get; set; }

            [global::ProtoBuf.ProtoMember(3, Name = @"solo")]
            public bool Solo { get; set; }

            [global::ProtoBuf.ProtoMember(4, Name = @"test_tone")]
            public bool TestTone { get; set; }

            [global::ProtoBuf.ProtoMember(5, Name = @"master_level")]
            public double MasterLevel { get; set; }

        }

        [global::ProtoBuf.ProtoContract()]
        public partial class Device : global::ProtoBuf.IExtensible
        {
            private global::ProtoBuf.IExtension __pbn__extensionData;
            global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
                => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

            [global::ProtoBuf.ProtoMember(1, Name = @"name")]
            [global::System.ComponentModel.DefaultValue("")]
            public string Name { get; set; } = "";

            [global::ProtoBuf.ProtoMember(2)]
            [global::System.ComponentModel.DefaultValue("")]
            public string renderID { get; set; } = "";

            [global::ProtoBuf.ProtoMember(3, Name = @"formats")]
            public global::System.Collections.Generic.List<Format> Formats { get; } = new global::System.Collections.Generic.List<Format>();

            [global::ProtoBuf.ProtoMember(4)]
            public Routing routing { get; set; }

            [global::ProtoBuf.ProtoContract()]
            public partial class Format : global::ProtoBuf.IExtensible
            {
                private global::ProtoBuf.IExtension __pbn__extensionData;
                global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
                    => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

                [global::ProtoBuf.ProtoMember(1, Name = @"sample_rate")]
                public uint SampleRate { get; set; }

                [global::ProtoBuf.ProtoMember(2, Name = @"bit_depth")]
                public uint BitDepth { get; set; }

                [global::ProtoBuf.ProtoMember(3)]
                public Type type { get; set; }

                [global::ProtoBuf.ProtoContract()]
                public enum Type
                {
                    [global::ProtoBuf.ProtoEnum(Name = @"TYPE_INT")]
                    TypeInt = 0,
                    [global::ProtoBuf.ProtoEnum(Name = @"TYPE_FLOAT")]
                    TypeFloat = 1,
                }

            }

            [global::ProtoBuf.ProtoContract()]
            public partial class Map : global::ProtoBuf.IExtensible
            {
                private global::ProtoBuf.IExtension __pbn__extensionData;
                global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
                    => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

                [global::ProtoBuf.ProtoMember(1, Name = @"channel_index")]
                public uint ChannelIndex { get; set; }

                [global::ProtoBuf.ProtoMember(2, Name = @"mapped_indices", IsPacked = true)]
                public uint[] MappedIndices { get; set; }

            }

            [global::ProtoBuf.ProtoContract()]
            public partial class Channel : global::ProtoBuf.IExtensible
            {
                private global::ProtoBuf.IExtension __pbn__extensionData;
                global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
                    => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

                [global::ProtoBuf.ProtoMember(1, Name = @"mute_enable")]
                public bool MuteEnable { get; set; }

                [global::ProtoBuf.ProtoMember(2, Name = @"solo_enable")]
                public bool SoloEnable { get; set; }

                [global::ProtoBuf.ProtoMember(3, Name = @"tone_enable")]
                public bool ToneEnable { get; set; }

                [global::ProtoBuf.ProtoMember(4, Name = @"audio_delay")]
                public double AudioDelay { get; set; }

                [global::ProtoBuf.ProtoMember(5, Name = @"level")]
                public double Level { get; set; }

            }

            [global::ProtoBuf.ProtoContract()]
            public partial class Routing : global::ProtoBuf.IExtensible
            {
                private global::ProtoBuf.IExtension __pbn__extensionData;
                global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
                    => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

                [global::ProtoBuf.ProtoMember(1, Name = @"channels")]
                public global::System.Collections.Generic.List<DigitalAudio.Device.Channel> Channels { get; } = new global::System.Collections.Generic.List<DigitalAudio.Device.Channel>();

                [global::ProtoBuf.ProtoMember(2, Name = @"map")]
                public global::System.Collections.Generic.List<DigitalAudio.Device.Map> Maps { get; } = new global::System.Collections.Generic.List<DigitalAudio.Device.Map>();

                [global::ProtoBuf.ProtoMember(3, Name = @"is_custom_map")]
                public bool IsCustomMap { get; set; }

                [global::ProtoBuf.ProtoMember(4, Name = @"master_channel")]
                public DigitalAudio.Device.Channel MasterChannel { get; set; }

            }

        }

    }

}


#endregion
