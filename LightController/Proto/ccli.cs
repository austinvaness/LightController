// <auto-generated>
//   This file was generated by a tool; you should avoid making direct changes.
//   Consider using 'partial classes' to extend these types
//   Input: ccli.proto
// </auto-generated>

#region Designer generated code

namespace rv.data
{

    [global::ProtoBuf.ProtoContract()]
    public partial class CCLIDocument : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"application_info")]
        public ApplicationInfo ApplicationInfo { get; set; }

        [global::ProtoBuf.ProtoMember(2, Name = @"enable_ccli_display")]
        public bool EnableCcliDisplay { get; set; }

        [global::ProtoBuf.ProtoMember(3, Name = @"ccli_license")]
        [global::System.ComponentModel.DefaultValue("")]
        public string CcliLicense { get; set; } = "";

        [global::ProtoBuf.ProtoMember(4)]
        public DisplayType display_type { get; set; }

        [global::ProtoBuf.ProtoMember(5, Name = @"template")]
        public Template.Slide Template { get; set; }

        [global::ProtoBuf.ProtoContract()]
        public enum DisplayType
        {
            [global::ProtoBuf.ProtoEnum(Name = @"DISPLAY_TYPE_FIRST_SLIDE")]
            DisplayTypeFirstSlide = 0,
            [global::ProtoBuf.ProtoEnum(Name = @"DISPLAY_TYPE_LAST_SLIDE")]
            DisplayTypeLastSlide = 1,
            [global::ProtoBuf.ProtoEnum(Name = @"DISPLAY_TYPE_FIRST_AND_LAST_SLIDE")]
            DisplayTypeFirstAndLastSlide = 2,
            [global::ProtoBuf.ProtoEnum(Name = @"DISPLAY_TYPE_ALL_SLIDES")]
            DisplayTypeAllSlides = 3,
        }

    }

}


#endregion
